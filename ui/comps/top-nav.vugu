<div>
    <nav class="navbar navbar-light bg-light">
        <div class="container-fluid">
            <a class="navbar-brand btn" @click='c.Navigate("/", nil)'>
                <img src="https://i.ibb.co/mCyDQvg/logo.png" height="60" style="border: 1px solid black;"/>
                <strong>No Ego Tribes</strong>
            </a>
            <div class="d-flex cart-hover">
                    <a href="/login">Login / Register</a>
            </div>
        </div>
    </nav>
</div>
<style>
    .pointer {
        cursor: pointer;
    }

    .cart-hover {
        position: relative;
    }

    .cart-hover .cart-mini {
        white-space: nowrap;
        visibility: hidden;
        right: 40px;
        min-width: 370px;
        border-radius: 6px;
        background-color: white;
        position: absolute;
        z-index: 1;
        top: 100%;
    }

    .cart-hover:hover .cart-mini {
        visibility: visible;
    }

</style>
<script type="application/x-go">
import (
    "log"
    "noegotribes/ui/state"
    "github.com/vugu/vgrouter"
)
type TopNav struct {
    vgrouter.NavigatorRef
    state.CartAPIRef
}

func (c *TopNav) Init(ctx vugu.InitCtx) {
	go func() {
		_, updated, err := c.GetCart()
		if err != nil {
			log.Printf("error getting card: %v", err)
			return
		}

		if updated {
			ctx.EventEnv().Lock()
			ctx.EventEnv().UnlockRender()
		}
	}()
}

func (c *TopNav) DeleteCart(event vugu.DOMEvent, i int) {
	newList := append(c.Cart[:i], c.Cart[i+1:]...)
	ee := event.EventEnv()
	go func() {
		err := c.DeleteCartItem(newList)
		if err != nil {
			ee.Lock()
			log.Printf("error deleting card item: %v", err)
			ee.UnlockRender()
			return
		}
		ee.Lock()
		c.Cart = newList
		ee.UnlockRender()
	}()
}
</script>
